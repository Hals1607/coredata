import UIKit
import CoreData

class UpdateViewController: UIViewController {

    
	@IBOutlet weak var nametxt: UITextField!
    	@IBOutlet weak var emailtxt: UITextField!
    	@IBOutlet weak var cntctxt: UITextField!
    	@IBOutlet weak var citytxt: UITextField!
    	@IBOutlet weak var segmnt: UISegmentedControl!
    	@IBOutlet weak var pswdtxt: UITextField!
    	@IBOutlet weak var cnfpswdtxt: UITextField!
    
    var strname:String = ""
    
    var result = Student()
    var employeeDetails = Student()
    var objectId = NSManagedObjectID()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        //print(strname)
        employeeDetails = CoreDataServiceManager.getEmployeeBy(id: strname)[0]
        print(employeeDetails)
        nametxt.text = employeeDetails.s_name
        emailtxt.text = employeeDetails.s_emailid
        cntctxt.text = employeeDetails.s_contact
        citytxt.text = employeeDetails.s_city
        pswdtxt.text = employeeDetails.s_password
        cnfpswdtxt.text = employeeDetails.cnf_pswd
        if employeeDetails.s_gender == "Male"
        {
            segmnt.selectedSegmentIndex = 0
        }
        else
        {
            segmnt.selectedSegmentIndex = 1
        }
        objectId = employeeDetails.objectID
        
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

	@IBAction func ActionSave(_ sender: UIButton) {
        
        	var dict = [String:Any]()
        	dict["s_name"] = snametxtfield.text
        	dict["s_emailid"] = semailtxtfield.text
        	dict["s_contact"] = scontctno.text
       		dict["s_city"] = citytxtfield.text
        	if s_segment.selectedSegmentIndex == 0
        	{
            		dict["s_gender"] = "Male"
        	}
        	else
        	{
            		dict["s_gender"] = "Female"
        	}
        	dict["s_password"] = pswrdtxtfield.text
        	dict["cnf_pswd"] = cnfpswrdtxtfield.text
        
        
        	CoreDataServiceManager.storeEmployee(employeeDetail: dict)
        
    	}
    
    	@IBAction func ActionUpdate(_ sender: UIButton) {
        
		var dict = [String:Any]()
        	dict["s_name"] = nametxt.text
        	dict["s_emailid"] = emailtxt.text
        	dict["s_contact"] = cntctxt.text
        	dict["s_city"] = citytxt.text
        	if segmnt.selectedSegmentIndex == 0
        	{
            		dict["s_gender"] = "Male"
        	}
        	else
        	{
            		dict["s_gender"] = "Female"
        	}
        	dict["s_password"] = pswdtxt.text
        	dict["cnf_pswd"] = cnfpswdtxt.text
        
        	CoreDataServiceManager.updateEmployee(id: objectId, dict: dict)

    	}
    
   
    	@IBAction func ActionDelete(_ sender: UIButton) {
        
		employeeDetails = CoreDataServiceManager.getEmployeeBy(id: strname)[0]
        	CoreDataServiceManager.deleteEmployee(id: employeeDetails.objectID)
        	print("Deleted.")
        
        
    	}
    
    	@IBAction func ActionLogout(_ sender: UIButton) {
        
		let alert = UIAlertController(title: "Logout", message: "Are You Sure Want to Logout???", preferredStyle: .alert)
        	alert.addAction(UIAlertAction(title: "Logout", style: .default, handler: { action in
            	switch action.style{
            		case .default:
                		self.navigationController!.popToViewController(self.navigationController!.viewControllers[0], animated: true)
                		print("Logout")
                
            		case .cancel:
                		print("cancel")
                
            		case .destructive:
                		print("destructive")
                
                
            }}))
        self.present(alert, animated: true, completion: nil)
    }
}
